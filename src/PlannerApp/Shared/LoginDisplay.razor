@inject Blazored.LocalStorage.ILocalStorageService Storage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation

@using System.Security.Claims

<AuthorizeView>
    <Authorized>
        <MudMenu Icon="@Icons.Filled.Person" Color="Color.Secondary" Direction = "Direction.Bottom">
            <MudMenuItem>Welcome @context.User.FindFirst(ClaimTypes.GivenName).Value</MudMenuItem>
            <MudMenuItem OnClick="LogOutAsync">Logout</MudMenuItem>
        </MudMenu>
    </Authorized>
    <NotAuthorized>
        <MudIcon Icon="@Icons.Filled.Login" Color="Color.Secondary" onclick='() => Navigation.NavigateTo("/authentication/login")'></MudIcon>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task LogOutAsync()
    {
        await Storage.RemoveItemAsync("access_token");
        await Storage.RemoveItemAsync("expiry_date");

        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        Navigation.NavigateTo("/authentication/login");
    }
}
